<?xml version="1.0"?>

<robot name="base"
    xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:include filename="$(find my_robot)/urdf/diff_bot/common_properties.urdf.xacro" />

    <!-- Define a number of dimensions using properties -->
    <xacro:property name="base_size_x" value="0.6" />
    <xacro:property name="base_size_y" value="0.5" />
    <xacro:property name="base_size_z" value="0.130955" />
    <xacro:property name="wheel_length" value="0.03516" />
    <!-- 0.06032 value for perfect fit.-->
    <xacro:property name="wheel_radius" value="0.085" />
    <xacro:property name="wheel_offset_x" value="0.3" />
    <xacro:property name="wheel_offset_y" value="0.23492" />
    <xacro:property name="wheel_offset_z" value="-0.0229775" />
    <xacro:property name="PI" value="3.1415" />
    <!-- differential_drive_controller update rate -->
    <xacro:property name="update_rate" value="30" />
    <!-- 
        For more colors check the link below
        http://wiki.ros.org/simulator_gazebo/Tutorials/ListOfMaterials 
    -->
    <xacro:property name="wheel_color" value="WoodPallet" />
    <xacro:property name="castor_wheel_color" value="Grass" />
    <xacro:property name="body_color" value="WoodFloor" />

    <!-- 
        Define a wheel 
        It gets 4 params :
        suffix - identifier of the wheel.
        parent - it is the parent to which the joint for link is connected.
        reflect - for symmetrically placing the wheel. +1 represents +ve y and -1 represents -ve y,
                  also it is used to rotate around x axis such that z axis face each other.
        color - visual color
        Note : As per convention left(l) - +ve y and right(r) - -ve y
    -->
    <xacro:macro name="wheel" params="suffix parent reflect_y reflect_x color_rviz color_gazebo">
        <joint name="${parent}_${suffix}_wheel_joint" type="continuous">
            <axis xyz="0 0 ${-reflect_y}" />
            <limit effort="100" velocity="100"/>
            <safety_controller k_velocity="10" />
            <origin xyz="${reflect_x*wheel_offset_x - 1.5*reflect_x*wheel_radius} ${reflect_y*wheel_offset_y} ${wheel_offset_z}" rpy="${reflect_y*PI/2} 0 0" />
            <parent link="${parent}_link"/>
            <child link="${parent}_${suffix}_wheel_link"/>
        </joint>
        <gazebo reference="${parent}_${suffix}_wheel_link">
            <material>Gazebo/${color_gazebo}</material>
        </gazebo>
        <link name="${parent}_${suffix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <material name="${color_rviz}" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <surface>
                    <friction>
                        <ode>
                            <mu>0.5</mu>
                            <mu2>0.5</mu2>
                            <fdir1>1.000000 1.000000 1.000000</fdir1>
                            <slip1>0.000000</slip1>
                            <slip2>0.000000</slip2>
                        </ode>
                    </friction>
                </surface>
            </collision>
            <xacro:cylinder_inertial radius="${wheel_radius}" length="${wheel_length}" mass="5">
                <origin xyz="0 0 0" />
            </xacro:cylinder_inertial>
        </link>
    </xacro:macro>

    <!-- The base xacro macro -->
    <xacro:macro name="base" params="name color_rviz color_gazebo">
        <gazebo reference="${name}_link">
            <material>Gazebo/${color_gazebo}</material>
        </gazebo>
        <link name="${name}_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
                </geometry>
                <material name="${color_rviz}" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
                </geometry>
            </collision>
            <visual>
                <origin xyz="${base_size_x/2} 0 0" rpy="0 ${PI/4} 0" />
                <geometry>
                    <box size="${base_size_z/sqrt(2)} ${base_size_y} ${base_size_z/sqrt(2)}" />
                </geometry>
                <material name="${color_rviz}" />
            </visual>
            <collision>
                <origin xyz="${base_size_x/2} 0 0" rpy="0 ${PI/4} 0" />
                <geometry>
                    <box size="${base_size_z/sqrt(2)} ${base_size_y} ${base_size_z/sqrt(2)}" />
                </geometry>
            </collision>
            <xacro:box_inertial x="${base_size_x}" y="${base_size_y}" z="${base_size_z}" mass="12">
                <origin xyz="0 0 0" />
            </xacro:box_inertial>
        </link>
    </xacro:macro>

    <link name="base_footprint">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.05 0.05 0.001" />
            </geometry>
            <material name="TransparentGreen" />
        </visual>
    </link>

    <joint name="base_joint" type="fixed">
        <origin xyz="0 0 ${wheel_radius - wheel_offset_z}" rpy="0 0 0" />
        <parent link="base_footprint"/>
        <child link="base_link" />
    </joint>

    <!-- Add base_link -->
    <xacro:base name="base" color_rviz="OffWhite" color_gazebo="${body_color}" />
    <!-- Add the drive wheels -->
    <xacro:wheel parent="base" suffix="fl" reflect_x="1" reflect_y="1" color_rviz="Blue" color_gazebo="${wheel_color}" />
    <xacro:wheel parent="base" suffix="fr" reflect_x="1" reflect_y="-1" color_rviz="Blue" color_gazebo="${wheel_color}" />
    <xacro:wheel parent="base" suffix="bl" reflect_x="-1" reflect_y="1" color_rviz="Blue" color_gazebo="${wheel_color}" />
    <xacro:wheel parent="base" suffix="br" reflect_x="-1" reflect_y="-1" color_rviz="Blue" color_gazebo="${wheel_color}" />

    <!-- Plugins -->
    <gazebo>
        <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
            <updateRate>90.0</updateRate>
            <robotNamespace>/my_robot</robotNamespace>
            <leftFrontJoint>base_fl_wheel_joint</leftFrontJoint>
            <rightFrontJoint>base_fr_wheel_joint</rightFrontJoint>
            <leftRearJoint>base_bl_wheel_joint</leftRearJoint>
            <rightRearJoint>base_br_wheel_joint</rightRearJoint>
            <wheelSeparation>${wheel_offset_y*2}</wheelSeparation>
            <wheelDiameter>${wheel_radius*2}</wheelDiameter>
            <robotBaseFrame>base_footprint</robotBaseFrame>
            <torque>150</torque>
            <MaxForce>3.0</MaxForce>
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <broadcastTF>true</broadcastTF>
            <covariance_x>0.001</covariance_x>
            <covariance_y>0.001</covariance_y>
            <covariance_yaw>0.01</covariance_yaw>
        </plugin>
    </gazebo>



</robot>